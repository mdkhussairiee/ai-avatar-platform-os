
version: '3.8'

services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: avatar
      POSTGRES_PASSWORD: avatar123
      POSTGRES_DB: avatar_db
    
  ollama:
    image: ollama/ollama
    container_name: ollama
    
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always

  monitor:
    build:
      context: ./monitor
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - ollama
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  celery_worker:
    build:
      context: ./monitor
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: celery -A worker worker --loglevel=info

volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all


  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always

  monitor:
    build:
      context: ./monitor
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - ollama
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  celery_worker:
    build:
      context: ./monitor
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: celery -A worker worker --loglevel=info

volumes:
      - pgdata:/var/lib/postgresql/data

  backend:
    build:
      context: ./server
    environment:
      - DATABASE_URL=postgresql://avatar:avatar123@db:5432/avatar_db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "3001:3001"
    depends_on:
      - db

  frontend:
    build:
      context: ./client
    command: npm run build && npm run export
    
  ollama:
    image: ollama/ollama
    container_name: ollama
    
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always

  monitor:
    build:
      context: ./monitor
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - ollama
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  celery_worker:
    build:
      context: ./monitor
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: celery -A worker worker --loglevel=info

volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all


  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always

  monitor:
    build:
      context: ./monitor
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - ollama
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  celery_worker:
    build:
      context: ./monitor
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: celery -A worker worker --loglevel=info

volumes:
      - ./client/out:/usr/share/nginx/html
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    
  ollama:
    image: ollama/ollama
    container_name: ollama
    
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always

  monitor:
    build:
      context: ./monitor
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - ollama
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  celery_worker:
    build:
      context: ./monitor
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: celery -A worker worker --loglevel=info

volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all


  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always

  monitor:
    build:
      context: ./monitor
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - ollama
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  celery_worker:
    build:
      context: ./monitor
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: celery -A worker worker --loglevel=info

volumes:
      - ./client/out:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

  wav2lip:
    build:
      context: ./wav2lip
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    ports:
      - "5000:5000"
    depends_on:
      - frontend
    command: python3 app.py

  tts:
    build:
      context: ./tts
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    ports:
      - "5002:5002"
    depends_on:
      - frontend
    command: python3 server.py


  ollama:
    image: ollama/ollama
    container_name: ollama
    
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always

  monitor:
    build:
      context: ./monitor
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - ollama
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  celery_worker:
    build:
      context: ./monitor
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: celery -A worker worker --loglevel=info

volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all


  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always

  monitor:
    build:
      context: ./monitor
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - ollama
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: uvicorn main:app --host 0.0.0.0 --port 8000

  celery_worker:
    build:
      context: ./monitor
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0
    command: celery -A worker worker --loglevel=info

volumes:
  pgdata:
